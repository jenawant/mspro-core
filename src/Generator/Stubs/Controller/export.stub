
    /**
     * 数据导出
     * @return ResponseInterface
     * @throws \PhpOffice\PhpSpreadsheet\Writer\Exception
     * @throws \Psr\Container\ContainerExceptionInterface
     * @throws \Psr\Container\NotFoundExceptionInterface
     */
    #[PostMapping("export"), Permission("{EXPORT_PERMISSION}"), OperationLog]
    public function export(): ResponseInterface
    {
        return $this->service->export($this->request->all(), {DTO_CLASS}, 'ExportDataList');
    }

    /**
     * 异步数据导出
     * @description 生成.zip格式文件，需配合asyncDownload方法使用
     * @return ResponseInterface
     * @throws \PhpOffice\PhpSpreadsheet\Writer\Exception
     * @throws \Psr\Container\ContainerExceptionInterface
     * @throws \Psr\Container\NotFoundExceptionInterface
     */
    #[PostMapping("asyncExport"), Permission("{EXPORT_PERMISSION}"), OperationLog]
    public function asyncExport(): ResponseInterface
    {
        $filename = 'ExportDataList-' . date('Ymd') . '-' . snowflake_id();
        $this->service->asyncExport($this->request->all(), {DTO_CLASS}, $filename);
        return $this->success('已加入导出队列，请稍后', ['filename' => $filename]);
    }

    /**
     * 下载异步导出的文件
     * @description 输出.zip格式文件，前端定时携带filename参数请求该接口，若异步导出完成，则下载文件
     * @return ResponseInterface
     * @throws \PhpOffice\PhpSpreadsheet\Writer\Exception
     * @throws \Psr\Container\ContainerExceptionInterface
     * @throws \Psr\Container\NotFoundExceptionInterface
     */
    #[GetMapping("asyncDownload"), Permission("{EXPORT_PERMISSION}")]
    public function asyncDownload(): ResponseInterface
    {
        return $this->service->asyncDownload($this->request->input('filename'));
    }
